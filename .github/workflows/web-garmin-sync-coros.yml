name: web-garmin-sync-coros

on:
  workflow_dispatch:
    inputs:
      SOURCE:
        description: 'data source'
        required: true
        default: 'GARMIN'
      GARMIN_EMAIL:
        description: 'garmin email'
        required: true
      GARMIN_PASSWORD:
        description: 'garmin password'
        required: true
      GARMIN_AUTH_DOMAIN:
        description: 'garmin CN or global'
        required: true
        default: 'CN'
      GARMIN_START_TIME:
        description: 'garmin sync start time'
        required: true
        default: '0'
      COROS_EMAIL:
        description: 'coros email'
        required: true
      COROS_PASSWORD:
        description: 'coros password'
        required: true
      COROS_START_TIME:
        description: 'coros sync start time'
        required: true
        default: '0'
      DB_NAME:
        description: 'database name'
        required: true
        default: 'activity.db'

env:
  GITHUB_NAME: ${{ secrets.GIT_NAME }}
  GITHUB_EMAIL: ${{ secrets.GIT_EMAIL }}

jobs:
  sync:
    runs-on: ubuntu-20.04

    steps:
      - name: Show Input
        run: |
          echo SOURCE=${{ github.event.inputs.SOURCE }} GARMIN_EMAIL=${{ github.event.inputs.GARMIN_EMAIL }} COROS_EMAIL=${{ github.event.inputs.COROS_EMAIL }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      # from pdm
      - name: Set Variables
        id: set_variables
        run: |
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v4
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: Ubuntu-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.pip-cache.outputs.cache-hit != 'true'
      - name: Run Garmin or Coros Sync
        run: |
          python scripts/garmin-sync-coros.py ${{inputs.SOURCE}} --GARMIN_EMAIL ${{inputs.GARMIN_EMAIL}} --GARMIN_PASSWORD ${{inputs.GARMIN_PASSWORD}} --GARMIN_AUTH_DOMAIN ${{inputs.GARMIN_AUTH_DOMAIN}} --GARMIN_START_TIME ${{inputs.GARMIN_START_TIME}} --COROS_EMAIL ${{inputs.COROS_EMAIL}} --COROS_PASSWORD ${{inputs.COROS_PASSWORD}} --COROS_START_TIME ${{inputs.COROS_START_TIME}} --DB_NAME ${{inputs.DB_NAME}}
      - name: Push new cookie
        run: |
          git config --local user.email "${{ env.GITHUB_EMAIL }}"
          git config --local user.name "${{ env.GITHUB_NAME }}"
          git add .
          git commit -m 'update garmin activity' || echo "nothing to commit"
          git push || echo "nothing to push"
